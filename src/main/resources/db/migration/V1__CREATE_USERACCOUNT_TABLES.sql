-- Creating Sequence for user_account_seq if it doesn't exist
CREATE SEQUENCE IF NOT EXISTS user_account_seq START 1;

-- Creating USERACCOUNT table
CREATE TABLE IF NOT EXISTS useraccount (
    USER_ID INT NOT NULL PRIMARY KEY DEFAULT nextval('user_account_seq'),
    FIRST_NAME VARCHAR(255) NOT NULL,
    LAST_NAME VARCHAR(255),
    ID_NUMBER VARCHAR(255),
    EMAIL VARCHAR(255),
    MOBILE VARCHAR(255),
    ADDRESS_LINE1 VARCHAR(255),
    ADDRESS_LINE2 VARCHAR(255),
    TOWN VARCHAR(255),
    POSTCODE VARCHAR(255),
    COUNTRY VARCHAR(255),
    PROFILE_PHOTO VARCHAR(255),
    ACTIVE BOOLEAN DEFAULT FALSE,
    CREATED_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    UPDATE_TIMESTAMP TIMESTAMP
);

-- Creating FARMPOST table
CREATE TABLE IF NOT EXISTS farmpost (
    POST_ID UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    USER_ID INT NOT NULL,
    TITLE TEXT,
    DETAILS TEXT NOT NULL,
    PHOTO VARCHAR(255),
    LIKES_COUNT INT,
    DELETED BOOLEAN DEFAULT FALSE,
    CREATED_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    UPDATE_TIMESTAMP TIMESTAMP,
    FOREIGN KEY (USER_ID) REFERENCES USERACCOUNT(USER_ID)
);

-- Creating Sequence for otp_seq if it doesn't exist
CREATE SEQUENCE IF NOT EXISTS otp_seq START 1;

-- Creating OTP table
CREATE TABLE otp (
    id INT NOT NULL PRIMARY KEY DEFAULT nextval('otp_seq'),
    USER_ID INT NOT NULL,
    otp_code VARCHAR(6) NOT NULL,
    expiration_time TIMESTAMP NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (USER_ID) REFERENCES USERACCOUNT(USER_ID)
);
